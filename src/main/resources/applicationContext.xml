<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd ">

    <!--扫描指定包下的注解-->
    <context:component-scan base-package="com.fc">
        <!--不扫描Controller注解-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--引入jdbc.properties文件-->
    <context:property-placeholder location="classpath:/jdbc.properties" ignore-unresolvable="true"/>

    <!--配置连接池数据源-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置sqlSessionFactoryBean-->
    <bean name="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--使用数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--引入mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--配置事务管理器-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启注解事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--事务通知-->
    <tx:advice id="myAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="false" isolation="DEFAULT" propagation="REQUIRED"/>
            <tx:method name="login*" read-only="true" isolation="DEFAULT" propagation="REQUIRED"/>
            <tx:method name="add*" read-only="false" isolation="READ_UNCOMMITTED" propagation="REQUIRED"/>
            <tx:method name="delete*" read-only="false" isolation="READ_UNCOMMITTED" propagation="REQUIRED"/>
            <tx:method name="update*" read-only="false" isolation="READ_UNCOMMITTED" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!--事务切点-->
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.fc.service.impl.*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="myAdvice" pointcut-ref="pointcut"/>
    </aop:config>

    <!-- 扫描dao层接口，用来生成代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fc.dao"/>
    </bean>

    <!--引入redis.properties配置文件-->
    <context:property-placeholder location="classpath:/redis.properties" ignore-unresolvable="true" />

    <!--Redis数据库配置-->
    <bean id="redisStandaloneConfiguration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <property name="database" value="${redis.database}"/>
        <property name="port" value="${redis.port}"/>
        <!--<property name="password" value="${redis.password}"/>-->
        <property name="hostName" value="${redis.host}"/>
    </bean>

    <!--配置Jedis连接池-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="standaloneConfig" ref="redisStandaloneConfiguration"/>
        <property name="usePool" value="true"/>
    </bean>

    <!--配置Redis模板对象用来操作Redis数据库-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <!--配置Redis工具类-->
    <bean id="redisUtils" class="com.fc.utils.RedisUtils">
        <property name="template" ref="stringRedisTemplate"/>
    </bean>
</beans>